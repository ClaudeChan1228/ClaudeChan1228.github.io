<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>数据绑定与数据源</title>
      <link href="/2024/07/26/009-%E6%95%B0%E6%8D%AE%E7%BB%91%E5%AE%9A%E4%B8%8E%E6%95%B0%E6%8D%AE%E6%BA%90/"/>
      <url>/2024/07/26/009-%E6%95%B0%E6%8D%AE%E7%BB%91%E5%AE%9A%E4%B8%8E%E6%95%B0%E6%8D%AE%E6%BA%90/</url>
      
        <content type="html"><![CDATA[<p>本文将介绍SAP UI5 Demo WalkThrough中涉及到的数据绑定操作与数据源的设置与使用。</p><h1 id="数据绑定"><a href="#数据绑定" class="headerlink" title="数据绑定"></a>数据绑定</h1><p>SAP UI5通过模型来绑定数据：</p><ol><li>默认模型</li><li>命名模型</li></ol><h2 id="默认模型"><a href="#默认模型" class="headerlink" title="默认模型"></a>默认模型</h2><p>在WalkThrough 7的<code>Controller</code>的初始化方法中：</p><pre><code class="highlight javascript"><span class="title function_">onInit</span>(<span class="params"></span>) &#123;   <span class="comment">// set data model on view</span>   <span class="keyword">const</span> oData = &#123;      recipient : &#123;         name : <span class="string">&quot;World&quot;</span>      &#125;   &#125;;   <span class="keyword">const</span> oModel = <span class="keyword">new</span> <span class="title class_">JSON</span>Model(oData);   <span class="variable language_">this</span>.<span class="title function_">getView</span>().<span class="title function_">setModel</span>(oModel);&#125;</code></pre><p>代码通过<code>this.getView().setModel(oModel)</code>设置了视图的默认数据模型。当<code>setModel</code>方法的入参只有一个<code>Model</code>对象时，程序设置的模型即为视图的默认模型，在<code>view.xml</code>和<code>JavaScript</code>文件中可以通过如下方式来获取默认数据模型的内容：</p><ul><li><code>view.xml</code><ul><li><code>&#123;/该模型的一级属性/该模型的二级属性/...&#125;</code></li></ul></li><li><code>JavaScript</code><ul><li><code>this.getView().getModel().getProperty(&quot;&#123;/该模型的一级属性/该模型的二级属性/...&#125;&quot;);</code></li></ul></li></ul><h2 id="命名模型"><a href="#命名模型" class="headerlink" title="命名模型"></a>命名模型</h2><p>除默认数据模型外的其他的数据模型，在<code>set</code>和<code>get</code>的时候则需要指定它对应的模型名称。例如在WalkThrough 20 <code>InvoiceList.controller.js</code>中的代码：</p><pre><code class="highlight javascript"><span class="title function_">onInit</span>(<span class="params"></span>) &#123;<span class="keyword">const</span> oViewModel = <span class="keyword">new</span> <span class="title class_">JSON</span>Model(&#123;<span class="attr">currency</span>: <span class="string">&quot;EUR&quot;</span>&#125;);           <span class="comment">// 为防止歧义，我将view改为currency</span><span class="variable language_">this</span>.<span class="title function_">getView</span>().<span class="title function_">setModel</span>(oViewModel, <span class="string">&quot;currency&quot;</span>);&#125;</code></pre><p>获取数据模型内容的时候同理需要加上对应模型的名称：</p><ul><li><code>view.xml</code><ul><li><code>&#123;currency&gt;/该模型的一级属性/该模型的二级属性/...&#125;</code></li></ul></li><li><code>JavaScript</code><ul><li><code>this.getView().getModel(&quot;currency&quot;).getProperty(&quot;&#123;/该模型的一级属性/该模型的二级属性/...&#125;&quot;);</code></li></ul></li></ul><h2 id="view-xml中获取模型的-和"><a href="#view-xml中获取模型的-和" class="headerlink" title="view.xml中获取模型的&gt;/和&gt;"></a><code>view.xml</code>中获取模型的<code>&gt;/</code>和<code>&gt;</code></h2><p>上述在<code>view.xml</code>获取模型内容使用了<code>&gt;/</code>，而<code>&gt;</code>也能用来获取模型内容。两者的区别如下：</p><ul><li><code>&gt;/</code>：绝对路径，确保从模型的根开始访问数据。</li><li><code>&gt;</code>：相对路径，通常在绑定集合项或嵌套结构时使用。</li></ul><p><code>&gt;</code>的使用，需要有对应的上下文进行支持，例如在WalkThrough 21的<code>InvoiceList.view.xml</code>中：</p><pre><code class="highlight xml"><span class="tag">&lt;<span class="name">List</span></span><span class="tag"><span class="attr">headerText</span>=<span class="string">&quot;&#123;i18n&gt;invoiceListTitle&#125;&quot;</span></span><span class="tag"><span class="attr">class</span>=<span class="string">&quot;sapUiResponsiveMargin&quot;</span></span><span class="tag"><span class="attr">width</span>=<span class="string">&quot;auto&quot;</span></span><span class="tag"><span class="attr">items</span>=<span class="string">&quot;&#123;invoice&gt;/Invoices&#125;&quot;</span></span><span class="tag">&gt;</span><span class="tag">&lt;<span class="name">items</span>&gt;</span><span class="tag">&lt;<span class="name">ObjectListItem</span></span><span class="tag"><span class="attr">title</span>=<span class="string">&quot;&#123;invoice&gt;Quantity&#125; x &#123;invoice&gt;ProductName&#125;&quot;</span></span><span class="tag">                 <span class="attr">......</span></span><span class="tag">/&gt;</span><span class="tag">&lt;/<span class="name">items</span>&gt;</span><span class="tag">&lt;/<span class="name">List</span>&gt;</span></code></pre><p><code>items=&quot;&#123;invoice&gt;/Invoices&#125;&quot;</code>通过绝对路径获取到了<code>invoice</code>的模型内容，使得<code>&lt;items&gt;</code>中的<code>&gt;</code>有了上下文进行支持，因此在<code>&lt;items&gt;</code>中可以通过<code>title=&quot;&#123;invoice&gt;Quantity&#125; x &#123;invoice&gt;ProductName&#125;&quot;</code>来直接获取<code>Invoices</code>下的<code>Quantity</code>和<code>ProductName</code>。</p><h3 id="为什么会有两种用法？"><a href="#为什么会有两种用法？" class="headerlink" title="为什么会有两种用法？"></a>为什么会有两种用法？</h3><ol><li><strong>相对路径的灵活性</strong>：相对路径使得在绑定复杂结构时更为灵活。特别是在重复绑定的情况下（如列表中的项），相对路径使得每个绑定都相对于当前项。</li><li><strong>绝对路径的明确性</strong>：绝对路径确保绑定的数据来自模型的根，可以避免由于上下文变化而导致的绑定问题。</li></ol><h2 id="通过JSON文件定义数据模型"><a href="#通过JSON文件定义数据模型" class="headerlink" title="通过JSON文件定义数据模型"></a>通过JSON文件定义数据模型</h2><p>WalkThrough 19中新建了一个<code>Invoices.json</code>文件，并在<code>manifest.json</code>加了如下配置：</p><pre><code class="highlight json"><span class="attr">&quot;sap.ui5&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span>    ...    <span class="attr">&quot;models&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span>      ...      <span class="attr">&quot;invoice&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span>        <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;sap.ui.model.json.JSONModel&quot;</span><span class="punctuation">,</span>        <span class="attr">&quot;uri&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Invoices.json&quot;</span>      <span class="punctuation">&#125;</span>      ...    <span class="punctuation">&#125;</span>  <span class="punctuation">&#125;</span></code></pre><p>其作用是在UI5程序初始化期间程序会根据<code>manifest.json</code>中配置的model自动创建一个内容及结构指向<code>Invoices.json</code>、叫<code>invoice</code>的一个<code>JSONModel</code>类型的数据模型。</p><p>等同于在<code>OnInit</code>方法中通过代码进行数据模型的创建：</p><pre><code class="highlight javascript"><span class="title function_">onInit</span>(<span class="params"></span>) &#123;<span class="keyword">const</span> oModel = <span class="keyword">new</span> <span class="title class_">JSON</span>Model(&#123;...&#125;);<span class="variable language_">this</span>.<span class="title function_">getView</span>().<span class="title function_">setModel</span>(oModel, <span class="string">&quot;invoice`&quot;</span>);&#125;</code></pre><h1 id="数据源"><a href="#数据源" class="headerlink" title="数据源"></a>数据源</h1><p>前端Fiori项目通过访问后端数据源来获取数据。</p><h2 id="Remote-OData-Service"><a href="#Remote-OData-Service" class="headerlink" title="Remote OData Service"></a>Remote OData Service</h2><p>OData是一种常用的Fiori项目获取后端数据的方式，在Fiori中通过OData访问后端数据源需要使用到<strong>代理中间件</strong>。</p><p>在WalkThrough 25中提供了一个叫<a href="http://help.sap.com/disclaimer?site=https://bestofui5.org/#/packages/ui5-middleware-simpleproxy">ui5-middleware-simpleproxy</a>的代理中间件和公共OData服务（Northwind OData service：<a href="https://services.odata.org/V2/Northwind/Northwind.svc/%EF%BC%89%E4%BE%9B%E6%88%91%E4%BB%AC%E7%BB%83%E4%B9%A0%E4%BD%BF%E7%94%A8%E3%80%82">https://services.odata.org/V2/Northwind/Northwind.svc/）供我们练习使用。</a></p><ol><li><p>通过在Terminal中执行如下指令来安装该中间件的包：</p><pre><code class="highlight shell">npm i -D ui5-middleware-simpleproxy</code></pre></li><li><p>在<code>ui5.yaml</code>中配置后端OData的服务器：</p><pre><code class="highlight yaml"><span class="attr">server:</span>  <span class="attr">customMiddleware:</span>  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">ui5-middleware-simpleproxy</span>    <span class="attr">afterMiddleware:</span> <span class="string">compression</span>    <span class="attr">mountPath:</span> <span class="string">/V2</span>    <span class="attr">configuration:</span>      <span class="attr">baseUri:</span> <span class="string">&quot;https://services.odata.org&quot;</span></code></pre></li><li><p>在<code>manifest.json</code>中配置数据源：</p><pre><code class="highlight json"><span class="attr">&quot;sap.app&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span>...<span class="punctuation">,</span><span class="attr">&quot;dataSources&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="attr">&quot;invoiceRemote&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="attr">&quot;uri&quot;</span><span class="punctuation">:</span> <span class="string">&quot;V2/Northwind/Northwind.svc/&quot;</span><span class="punctuation">,</span><span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;OData&quot;</span><span class="punctuation">,</span><span class="attr">&quot;settings&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="attr">&quot;odataVersion&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2.0&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span>...</code></pre></li><li><p>在<code>manifest.json</code>中给数据模型注入数据：</p><pre><code class="highlight json"><span class="attr">&quot;sap.ui5&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span>...<span class="attr">&quot;models&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span>...<span class="attr">&quot;invoice&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="attr">&quot;dataSource&quot;</span><span class="punctuation">:</span> <span class="string">&quot;invoiceRemote&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span>   <span class="punctuation">&#125;</span><span class="punctuation">,</span>...</code></pre></li></ol><p>在WalkThrough 19中，项目通过<code>Invoices.json</code>来给<code>manifest.json</code>中创建的数据对象<code>invoice</code>填充数据，而到了WalkThrough 25项目可以通过代理去访问后端服务器的数据源来给<code>invoice</code>填充数据。</p><h2 id="模拟服务器"><a href="#模拟服务器" class="headerlink" title="模拟服务器"></a>模拟服务器</h2><p>Mock Server模拟服务器可以为前端Fiori项目提供一个模拟的后端服务器使用，可以帮助前端开发人员进行独立开发和测试。</p><p><img src="https://claudechan-1316756394.cos.ap-nanjing.myqcloud.com/PicGo/202407271348038.png" alt="image-20240727134827970"></p><ol><li><p><code>test\mockServer.html</code>取代了<code>index.html</code>，通过启动<code>test\mockServer.html</code>来开启test mode测试模式。</p></li><li><p><code>test\mockServer.html</code>指定<code>test\initMockServer.js</code>为启动脚本。</p><p><img src="https://claudechan-1316756394.cos.ap-nanjing.myqcloud.com/PicGo/202407271406113.png"></p></li><li><p><code>test\initMockServer.js</code>相当于给项目的启动脚本做了一层中转：保证了项目的数据请求可以被拦截并转到Mock Server中，同时也加载原启动脚本使项目照常运行显示。</p><ol><li><p><code>mockserver.init();</code>启动模拟服务器、运行<code>localService\mockserver.js</code>脚本代码；</p></li><li><p><code>sap.ui.require([&quot;sap/ui/core/ComponentSupport&quot;]);</code>加载项目的原启动脚本；</p><p><img src="https://claudechan-1316756394.cos.ap-nanjing.myqcloud.com/PicGo/202407271407615.png" alt="image-20240727140745534"></p></li></ol></li><li><p><code>localService\mockserver.js</code>初始化模拟服务器：</p><ol><li><code>rootUri: sap.ui.require.toUrl(&quot;ui5/walkthrough&quot;) + &quot;/V2/Northwind/Northwind.svc/&quot;</code>配置需要被拦截的请求；</li><li><code>const sPath = sap.ui.require.toUrl(&quot;ui5/walkthrough/localService&quot;);</code>和<code>oMockServer.simulate(sPath + &quot;/metadata.xml&quot;, sPath + &quot;/mockdata&quot;);</code>加载了模拟返回的数据模型结构<code>localService\metadata.xml</code>与数据内容<code>localService\mockdata\Invoices.json</code>；</li></ol></li></ol>]]></content>
      
      
      <categories>
          
          <category> SAP </category>
          
          <category> Fiori </category>
          
          <category> UI5Demo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Fiori </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WalkThrough 10 项目结构变化与Fiori项目初始化流程</title>
      <link href="/2024/07/24/008-WalkThrough%2010%20%E9%A1%B9%E7%9B%AE%E7%BB%93%E6%9E%84%E5%8F%98%E5%8C%96/"/>
      <url>/2024/07/24/008-WalkThrough%2010%20%E9%A1%B9%E7%9B%AE%E7%BB%93%E6%9E%84%E5%8F%98%E5%8C%96/</url>
      
        <content type="html"><![CDATA[<h1 id="变化"><a href="#变化" class="headerlink" title="变化"></a>变化</h1><p>WalkThrough 10 相较于之前的QuickStart 3，在项目结构上主要有以下变化：</p><ul><li>移除了<code>index.js</code>，新增<code>Component.js</code><ul><li><code>Component.js</code>取代了<code>index.js</code>，负责Fiori项目的初始化、配置和生命周期的管理</li><li><code>index.html</code>中不再指定初始化脚本<code>index.js</code>，取而代之的是通过<code>module:sap/ui/core/ComponentSupport</code>模块来调用<code>Component.js</code>进行初始化</li></ul></li><li><code>manifest.json</code>承担了更多的工作</li></ul><p>虽然 <code>manifest.json</code> 和 <code>Component.js</code> 都涉及某些配置和初始化工作，但它们在使用上是<strong>互补</strong>的。</p><h1 id="Fiori项目初始化流程"><a href="#Fiori项目初始化流程" class="headerlink" title="Fiori项目初始化流程"></a>Fiori项目初始化流程</h1><h2 id="启动index-html，加载SAP-UI5核心库"><a href="#启动index-html，加载SAP-UI5核心库" class="headerlink" title="启动index.html，加载SAP UI5核心库"></a>启动<code>index.html</code>，加载SAP UI5核心库</h2><h2 id="加载-ComponentSupport-模块"><a href="#加载-ComponentSupport-模块" class="headerlink" title="加载 ComponentSupport 模块"></a>加载 <code>ComponentSupport</code> 模块</h2><p>通过<code>index.html</code>中的 <code>data-sap-ui-onInit=&quot;module:sap/ui/core/ComponentSupport&quot;</code> 属性会自动加载 <code>sap/ui/core/ComponentSupport</code> 模块。</p><h2 id="查找组件标记并加载组件"><a href="#查找组件标记并加载组件" class="headerlink" title="查找组件标记并加载组件"></a>查找组件标记并加载组件</h2><p><code>ComponentSupport</code> 模块会查找页面中带有 <code>data-sap-ui-component</code> 属性的 HTML 元素，并根据 <code>data-name</code> 属性加载对应命名空间下的的组件。</p><p><img src="https://claudechan-1316756394.cos.ap-nanjing.myqcloud.com/PicGo/202407241928848.png" alt="image-20240724192847741"></p><h2 id="加载并执行-Component-js"><a href="#加载并执行-Component-js" class="headerlink" title="加载并执行 Component.js"></a>加载并执行 <code>Component.js</code></h2><p><code>Component.js</code> 定义了应用程序组件的初始化逻辑。</p><p><strong>其中的元数据（metadata）还定义了下一步会指向的 <code>manifest.json</code> 文件。</strong></p><p><img src="https://claudechan-1316756394.cos.ap-nanjing.myqcloud.com/PicGo/202407241934589.png" alt="image-20240724193408485"></p><h2 id="读取-manifest-json"><a href="#读取-manifest-json" class="headerlink" title="读取 manifest.json"></a>读取 <code>manifest.json</code></h2><p><code>manifest.json</code> 文件是应用程序的配置文件，包含应用的元数据、组件配置、路由配置、数据源等信息。</p><h2 id="初始化路由和模型"><a href="#初始化路由和模型" class="headerlink" title="初始化路由和模型"></a>初始化路由和模型</h2><p>根据 <code>manifest.json</code> 中的配置，<code>Component.js</code> 中的初始化方法会设置路由、创建并设置模型。（目前的Demo项目中还未涉及到这一块的内容，后续的WalkThrough会有相应的介绍）</p><h2 id="加载并显示根视图"><a href="#加载并显示根视图" class="headerlink" title="加载并显示根视图"></a>加载并显示根视图</h2><p>在 <code>manifest.json</code> 中，<code>rootView</code> 配置指定了应用程序的根视图。该视图会被加载并显示在页面上。</p><p><img src="https://claudechan-1316756394.cos.ap-nanjing.myqcloud.com/PicGo/202407241933487.png" alt="image-20240724193328401"></p><h2 id="完成初始化"><a href="#完成初始化" class="headerlink" title="完成初始化"></a>完成初始化</h2>]]></content>
      
      
      <categories>
          
          <category> SAP </category>
          
          <category> Fiori </category>
          
          <category> UI5Demo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Fiori </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>QuikStart 1~3 项目结构变化</title>
      <link href="/2024/07/20/007-QuikStart%201~3%20%E9%A1%B9%E7%9B%AE%E7%BB%93%E6%9E%84%E5%8F%98%E5%8C%96/"/>
      <url>/2024/07/20/007-QuikStart%201~3%20%E9%A1%B9%E7%9B%AE%E7%BB%93%E6%9E%84%E5%8F%98%E5%8C%96/</url>
      
        <content type="html"><![CDATA[<h1 id="QuikStart1"><a href="#QuikStart1" class="headerlink" title="QuikStart1"></a>QuikStart1</h1><ol><li>项目通过<code>index.html</code>启动，其中将<code>index.js</code>指定为启动脚本</li><li><code>index.js</code>定义了页面的实际UI控件和功能逻辑，最后通过<code>placeAt</code>将<code>index.js</code>中的UI布局替换到<code>index.html</code>中</li></ol><p><img src="https://claudechan-1316756394.cos.ap-nanjing.myqcloud.com/PicGo/202407212229549.png" alt="image-20240721222948438"></p><p><img src="https://claudechan-1316756394.cos.ap-nanjing.myqcloud.com/PicGo/202407212233095.png" alt="image-20240721223335992"></p><h1 id="QuikStart2"><a href="#QuikStart2" class="headerlink" title="QuikStart2"></a>QuikStart2</h1><p>QuikStart2中将QuikStart1中的<code>index.js</code>拆分为<code>index.js+App.view.xml+App.controller.js</code></p><ul><li><code>index.js</code>启动引导脚本<ul><li><code>App.view.xml</code>网页UI配置</li><li><code>App.controller.js</code>逻辑处理</li></ul></li></ul><p><img src="https://claudechan-1316756394.cos.ap-nanjing.myqcloud.com/PicGo/202407212252722.png" alt="image-20240721225249608"></p><p><img src="https://claudechan-1316756394.cos.ap-nanjing.myqcloud.com/PicGo/202407212254473.png" alt="image-20240721225406362"></p><p><img src="https://claudechan-1316756394.cos.ap-nanjing.myqcloud.com/PicGo/202407212256271.png" alt="image-20240721225609194"></p><h1 id="QuikStart3"><a href="#QuikStart3" class="headerlink" title="QuikStart3"></a>QuikStart3</h1><p>QuikStart3相比于QuikStart2在项目结构上没有变化，而内容上的变化主要体现在View的UI配置上。</p><p>值得一提的是，在<code>index.html</code>中指定的项目启动脚本<code>data-sap-ui-on-init=&quot;module:ui5/quickstart/index&quot;</code>实际上是指定其中的<code>OnInit</code>方法来负责项目每次启动时初始化工作。</p>]]></content>
      
      
      <categories>
          
          <category> SAP </category>
          
          <category> Fiori </category>
          
          <category> UI5Demo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Fiori </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ABAP 7.52环境搭建</title>
      <link href="/2024/07/13/006-ABAP%207.52%20%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
      <url>/2024/07/13/006-ABAP%207.52%20%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<p>在VMware虚拟机中安装OpenSUSE系统，在该系统上安装并启动SAP服务。</p><h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><ul><li>VMware16pro虚拟机</li><li><a href="https://download.opensuse.org/distribution/leap/15.1/iso/">OpenSUSE 15.1系统</a>（3.8G那个）</li><li><a href="https://winscp.net/eng/download.php#google_vignette">WinSCP（在主机和虚拟机之间传输文件的工具）</a></li><li><a href="https://developers.sap.com/trials-downloads.html">ABAP 7.52安装文件</a>（网页上找到<strong>SAP NetWeaver AS ABAP Developer Edition 7.52 SP04</strong>，将该标题下的ABAP安装文件part1~part11及License共12个压缩包下载下来）</li></ul><p><a href="https://www.sap.com/documents/2019/09/c86f9218-687d-0010-87a3-c30de2ffd8ff.html">可参考的SAP官方安装文档</a></p><h1 id="开始安装"><a href="#开始安装" class="headerlink" title="开始安装"></a>开始安装</h1><h2 id="安装VMware"><a href="#安装VMware" class="headerlink" title="安装VMware"></a>安装VMware</h2><h2 id="在VMware中安装OpenSUSE系统"><a href="#在VMware中安装OpenSUSE系统" class="headerlink" title="在VMware中安装OpenSUSE系统"></a>在VMware中安装OpenSUSE系统</h2><p><img src="https://claudechan-1316756394.cos.ap-nanjing.myqcloud.com/PicGo/202407132226712.png" alt="image-20240713222612606"></p><p><img src="https://claudechan-1316756394.cos.ap-nanjing.myqcloud.com/PicGo/202407132227131.png" alt="image-20240713222702989"></p><p><img src="https://claudechan-1316756394.cos.ap-nanjing.myqcloud.com/PicGo/202407132228334.png" alt="image-20240713222814248"></p><p><img src="https://claudechan-1316756394.cos.ap-nanjing.myqcloud.com/PicGo/202407132228983.png"></p><p>推荐硬盘100G以上，内存10G以上</p><p><img src="https://claudechan-1316756394.cos.ap-nanjing.myqcloud.com/PicGo/202407132229273.png" alt="image-20240713222929210"></p><p><img src="https://claudechan-1316756394.cos.ap-nanjing.myqcloud.com/PicGo/202407132231813.png" alt="image-20240713223127564"></p><p>前三步自动初始化，结束后从第四步Welcome开始，Next</p><p><img src="https://claudechan-1316756394.cos.ap-nanjing.myqcloud.com/PicGo/202407132234329.png" alt="image-20240713223428020"></p><p><img src="https://claudechan-1316756394.cos.ap-nanjing.myqcloud.com/PicGo/202407132235459.png" alt="image-20240713223516185"></p><p>额外的在线仓库，默认勾选》Next，这一步根据网络状况会需要个三四分钟</p><p><img src="https://claudechan-1316756394.cos.ap-nanjing.myqcloud.com/PicGo/202407132236662.png" alt="image-20240713223618373"></p><p><img src="https://claudechan-1316756394.cos.ap-nanjing.myqcloud.com/PicGo/202407132240619.png" alt="image-20240713224021330"></p><p><img src="https://claudechan-1316756394.cos.ap-nanjing.myqcloud.com/PicGo/202407132240806.png" alt="image-20240713224059550"></p><p><img src="https://claudechan-1316756394.cos.ap-nanjing.myqcloud.com/PicGo/202407132241300.png"></p><p><img src="https://claudechan-1316756394.cos.ap-nanjing.myqcloud.com/PicGo/202407132242531.png" alt="image-20240713224204288"></p><p><img src="https://claudechan-1316756394.cos.ap-nanjing.myqcloud.com/PicGo/202407132242171.png" alt="image-20240713224220921"></p><p><img src="https://claudechan-1316756394.cos.ap-nanjing.myqcloud.com/PicGo/202407132242697.png" alt="image-20240713224240436"></p><p><img src="https://claudechan-1316756394.cos.ap-nanjing.myqcloud.com/PicGo/202407132243702.png" alt="image-20240713224345854"></p><p>注意：创建系统账号，密码注意不要设置的太简单也尽量不使用特殊符号，否则有可能会导致后续安装SAP服务失败。（我这边设置的Opensuse151）</p><p><img src="https://claudechan-1316756394.cos.ap-nanjing.myqcloud.com/PicGo/202407132245964.png" alt="image-20240713224553653"></p><p><img src="https://claudechan-1316756394.cos.ap-nanjing.myqcloud.com/PicGo/202407132248899.png" alt="image-20240713224812628"></p><p><img src="https://claudechan-1316756394.cos.ap-nanjing.myqcloud.com/PicGo/202407132248016.png" alt="image-20240713224838772"></p><p>安装OpenSUSE系统的最后一步。这边耗时比较久，几十分钟甚至两三个小时。</p><p><img src="https://claudechan-1316756394.cos.ap-nanjing.myqcloud.com/PicGo/202407132249140.png" alt="image-20240713224904849"></p><p>安装成功后会自动启动系统</p><p><img src="https://claudechan-1316756394.cos.ap-nanjing.myqcloud.com/PicGo/202407141102247.png" alt="image-20240714110248109"></p><h2 id="在OpenSUSE安装相关的工具包并进行环境配置"><a href="#在OpenSUSE安装相关的工具包并进行环境配置" class="headerlink" title="在OpenSUSE安装相关的工具包并进行环境配置"></a>在OpenSUSE安装相关的工具包并进行环境配置</h2><p>由于我个人试用，并没有开启代理，如果有需要开启代理的可以参考<a href="https://www.sap.com/documents/2019/09/c86f9218-687d-0010-87a3-c30de2ffd8ff.html">官方文档</a>进行设置。</p><p><img src="https://claudechan-1316756394.cos.ap-nanjing.myqcloud.com/PicGo/202407141327395.png" alt="image-20240714132704107"></p><p><img src="https://claudechan-1316756394.cos.ap-nanjing.myqcloud.com/PicGo/202407141328296.png" alt="image-20240714132829186"></p><p>回到桌面，运行YaST</p><p><img src="https://claudechan-1316756394.cos.ap-nanjing.myqcloud.com/PicGo/202407141329452.png" alt="image-20240714132915174"></p><p><img src="https://claudechan-1316756394.cos.ap-nanjing.myqcloud.com/PicGo/202407141330343.png" alt="image-20240714133004102"></p><p>设置主机名vhcalnplci</p><p><img src="https://claudechan-1316756394.cos.ap-nanjing.myqcloud.com/PicGo/202407141332841.png" alt="image-20240714133231645"></p><p><img src="https://claudechan-1316756394.cos.ap-nanjing.myqcloud.com/PicGo/202407141332805.png" alt="image-20240714133247682"></p><p><img src="https://claudechan-1316756394.cos.ap-nanjing.myqcloud.com/PicGo/202407141334920.png" alt="image-20240714133443803"></p><p>下载uuidd和unrar</p><p><img src="https://claudechan-1316756394.cos.ap-nanjing.myqcloud.com/PicGo/202407141335723.png" alt="image-20240714133508533"></p><p>点Online Update后会有一个信息提示弹窗，点OK后搜索对应的应用下载即可</p><p><img src="https://claudechan-1316756394.cos.ap-nanjing.myqcloud.com/PicGo/202407141336455.png" alt="image-20240714133647320"></p><p><img src="https://claudechan-1316756394.cos.ap-nanjing.myqcloud.com/PicGo/202407141338245.png" alt="image-20240714133822118"></p><p><img src="https://claudechan-1316756394.cos.ap-nanjing.myqcloud.com/PicGo/202407141339679.png" alt="image-20240714133900484"></p><p>下载unrar同上</p><p><img src="https://claudechan-1316756394.cos.ap-nanjing.myqcloud.com/PicGo/202407141339465.png" alt="image-20240714133934299"></p><p>下载好后回到桌面应用栏运行Terminal</p><p><img src="https://claudechan-1316756394.cos.ap-nanjing.myqcloud.com/PicGo/202407141341598.png" alt="image-20240714134149001"></p><p>开启我们的uuidd服务</p><pre><code class="highlight shell">开启服务，运行后后提示输入密码sudo service uuidd start检查服务是否开启sudo service --status-all |grep uuiddrpm -qa | grep libaio</code></pre><p><img src="https://claudechan-1316756394.cos.ap-nanjing.myqcloud.com/PicGo/202407141345488.png" alt="image-20240714134513361"></p><p>修改主机名为vhcalnplci</p><pre><code class="highlight shell">sudo nano /etc/hostname修改好后按Ctrl+O，然后按回车进行保存，最后按Ctrl+X退出</code></pre><p><img src="https://claudechan-1316756394.cos.ap-nanjing.myqcloud.com/PicGo/202407141347644.png" alt="image-20240714134723531"></p><pre><code class="highlight shell">可以输入以下命令查询当前主机sudo cat /etc/hostname输入以下命令重启网络sudo rcnetwork restart</code></pre><p><img src="https://claudechan-1316756394.cos.ap-nanjing.myqcloud.com/PicGo/202407141352419.png" alt="image-20240714135223286"></p><p>重启好后重启系统，检查主机名是否成功修改</p><p><img src="https://claudechan-1316756394.cos.ap-nanjing.myqcloud.com/PicGo/202407141353742.png" alt="image-20240714135357635"></p><p>配置IP</p><pre><code class="highlight shell">查询IPip -h addr show将IP记录下来</code></pre><p><img src="https://claudechan-1316756394.cos.ap-nanjing.myqcloud.com/PicGo/202407141355207.png" alt="image-20240714135519084"></p><p>在host文件中配置我们的IP</p><pre><code class="highlight shell">sudo nano /etc/hosts将IP配置进去192.168.160.135 vhcalnplci vhcalnplci.dummy.nodomain</code></pre><p><img src="https://claudechan-1316756394.cos.ap-nanjing.myqcloud.com/PicGo/202407141358947.png" alt="image-20240714135803816"></p><p>同理Ctrl+o再回车在Ctrl+X退出</p><p>接下来打开WinSCP将我们电脑上安装好的ABAP 7.52的相关文件解压并复制到虚拟机中</p><p><img src="https://claudechan-1316756394.cos.ap-nanjing.myqcloud.com/PicGo/202407141432805.png" alt="image-20240714143217734"></p><p><img src="https://claudechan-1316756394.cos.ap-nanjing.myqcloud.com/PicGo/202407141401609.png" alt="image-20240714140110546"></p><p><img src="https://claudechan-1316756394.cos.ap-nanjing.myqcloud.com/PicGo/202407141401414.png" alt="image-20240714140150342"></p><p>在虚拟机中&#x2F;home&#x2F;claude目录下新建一个abaptrial目录</p><p><img src="https://claudechan-1316756394.cos.ap-nanjing.myqcloud.com/PicGo/202407141403643.png" alt="image-20240714140316540"></p><p>将我们电脑的压缩包解压出来</p><p><img src="https://claudechan-1316756394.cos.ap-nanjing.myqcloud.com/PicGo/202407141404422.png" alt="image-20240714140427348"></p><p><img src="https://claudechan-1316756394.cos.ap-nanjing.myqcloud.com/PicGo/202407141405508.png"></p><h2 id="在OpenSUSE中安装SAP服务"><a href="#在OpenSUSE中安装SAP服务" class="headerlink" title="在OpenSUSE中安装SAP服务"></a>在OpenSUSE中安装SAP服务</h2><p>OK接下来就可以回虚拟机进行最后一步安装SAP服务了</p><pre><code class="highlight shell">sudo -i输入密码，转为管理员权限cd..cd /home/claude/abaptrialchmod +x install.sh./install.sh</code></pre><p><img src="https://claudechan-1316756394.cos.ap-nanjing.myqcloud.com/PicGo/202407141415306.png" alt="image-20240714141506242"></p><p>运行完<code>./install.sh</code>后出来一个安装声明，滚轮滚到最后然后按ESC再按q退出</p><p><img src="https://claudechan-1316756394.cos.ap-nanjing.myqcloud.com/PicGo/202407141413681.png" alt="image-20240714141300508"></p><p>yes后输入两次密码开始安装，安装如果没有报错会需要个十来分钟</p><p><img src="https://claudechan-1316756394.cos.ap-nanjing.myqcloud.com/PicGo/202407141417764.png" alt="image-20240714141727696"></p><p><img src="https://claudechan-1316756394.cos.ap-nanjing.myqcloud.com/PicGo/202407141429751.png" alt="image-20240714142956674"></p><p>第一次安装会因为证书问题安装失败，我们将之前解压出来的证书文件复制到图示目录中，并将该目录下原来的.lic证书文件删除</p><p><img src="https://claudechan-1316756394.cos.ap-nanjing.myqcloud.com/PicGo/202407141433104.png"></p><p>回到虚拟机中重复上面的安装命令</p><pre><code class="highlight shell">sudo -i输入密码，转为管理员权限cd..cd /home/claude/abaptrial./install.sh</code></pre><p>安装成功后显示如下<img src="https://claudechan-1316756394.cos.ap-nanjing.myqcloud.com/PicGo/202407141440899.png" alt="image-20240714144007761"></p><h1 id="登录SAP-GUI"><a href="#登录SAP-GUI" class="headerlink" title="登录SAP GUI"></a>登录SAP GUI</h1><p><img src="https://claudechan-1316756394.cos.ap-nanjing.myqcloud.com/PicGo/202407141454815.png" alt="image-20240714145432721"></p><p>账号：SAP*</p><p>密码：Down1oad</p><p><img src="https://claudechan-1316756394.cos.ap-nanjing.myqcloud.com/PicGo/202407141456289.png" alt="image-20240714145613239"></p><p>tcode输入slicense更换SAP访问KEY</p><p>右键删除这两个KEY&gt;Delete License，并复制上面的Active Hardware Key</p><p><img src="https://claudechan-1316756394.cos.ap-nanjing.myqcloud.com/PicGo/202407141457048.png" alt="image-20240714145728938"></p><p>访问<a href="https://go.support.sap.com/minisap/#/minisap">官方网址</a>，在下面输入我们的英文名、邮箱、我们上面复制的Hardware Key生成我们的License Key文件</p><p><img src="https://claudechan-1316756394.cos.ap-nanjing.myqcloud.com/PicGo/202407141500926.png" alt="image-20240714150017778"></p><p>安装我们的License Key文件，接下来我们就可以去001Client中进行ABAP 7.52的试用了</p><p><img src="https://claudechan-1316756394.cos.ap-nanjing.myqcloud.com/PicGo/202407141502488.png" alt="image-20240714150258383"></p><h1 id="SAP服务的开启和关闭"><a href="#SAP服务的开启和关闭" class="headerlink" title="SAP服务的开启和关闭"></a>SAP服务的开启和关闭</h1><p>在虚拟机的Terminal中：</p><pre><code class="highlight shell">切换至npladm用户su npladm开启SAP服务startsap关闭SAP服务stopsap</code></pre><h1 id="SAP相关账号"><a href="#SAP相关账号" class="headerlink" title="SAP相关账号"></a>SAP相关账号</h1><h2 id="Client-000"><a href="#Client-000" class="headerlink" title="Client 000"></a>Client 000</h2><table><thead><tr><th>User name</th><th>Password</th><th>Description</th></tr></thead><tbody><tr><td>DDIC</td><td>Down1oad</td><td>Data Dictionary User</td></tr><tr><td>SAP*</td><td>Down1oad</td><td>SAP Administrator</td></tr></tbody></table><h2 id="Client-001"><a href="#Client-001" class="headerlink" title="Client 001"></a>Client 001</h2><table><thead><tr><th>User name</th><th>Password</th><th>Description</th></tr></thead><tbody><tr><td>DDIC</td><td>Down1oad</td><td>Data Dictionary User</td></tr><tr><td>SAP*</td><td>Down1oad</td><td>SAP Administrator</td></tr><tr><td>DEVELOPER</td><td>Down1oad</td><td>Developer User</td></tr><tr><td>BWDEVELOPER</td><td>Down1oad</td><td>Developer User</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> SAP </category>
          
          <category> 系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 环境搭建 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>已发布的请求号再利用</title>
      <link href="/2024/07/13/001-%E5%9B%9E%E9%80%80%E5%B7%B2%E5%8F%91%E5%B8%83%E7%9A%84%E8%AF%B7%E6%B1%82%E5%8F%B7/"/>
      <url>/2024/07/13/001-%E5%9B%9E%E9%80%80%E5%B7%B2%E5%8F%91%E5%B8%83%E7%9A%84%E8%AF%B7%E6%B1%82%E5%8F%B7/</url>
      
        <content type="html"><![CDATA[<p>从开发环境发布到测试环境的请求可以利用此方法实现在开发环境继续使用已发布的请求。</p><h1 id="修改已发布请求的状态"><a href="#修改已发布请求的状态" class="headerlink" title="修改已发布请求的状态"></a>修改已发布请求的状态</h1><ul><li>se38运行程序RDDIT076</li><li>输入需要调整的请求号</li><li>将请求的状态从R改为D</li></ul><p>之后该请求就可以继续在开发环境使用了。</p><p><img src="https://claudechan-1316756394.cos.ap-nanjing.myqcloud.com/PicGo/202407131447537.png" alt="image-20240713140702081"></p><h1 id="发布请求"><a href="#发布请求" class="headerlink" title="发布请求"></a>发布请求</h1><p>在发布本次调整后的请求，需要将主请求属性中的请请求到处时间字段EXPORT_TIMESTAMP删除。（第一次删除可能弹出警告，确认后再次删除该字段即可）删除该字段后请求就可以正常发布。</p><p><img src="https://claudechan-1316756394.cos.ap-nanjing.myqcloud.com/PicGo/202407131447067.png" alt="image-20240713141223096"></p>]]></content>
      
      
      <categories>
          
          <category> SAP </category>
          
          <category> ABAP </category>
          
          <category> 版本控制 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 版本 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ABAP List Program模板</title>
      <link href="/2024/02/16/005-ABAP%20List%20Program%E6%A8%A1%E6%9D%BF/"/>
      <url>/2024/02/16/005-ABAP%20List%20Program%E6%A8%A1%E6%9D%BF/</url>
      
        <content type="html"><![CDATA[<h1 id="复杂模板"><a href="#复杂模板" class="headerlink" title="复杂模板"></a>复杂模板</h1><pre><code class="highlight ABAP">*&amp;---------------------------------------------------------------------**&amp; 程序名：ZTEST_004*&amp;---------------------------------------------------------------------**&amp; 抬头：*&amp; 程序类型： 报表/表单/批导/后台JOB/函数/增强*&amp; 描述： *&amp; 修改记录：*&amp; 日期         修改人   请求号       业务顾问  修改内容*&amp; 2024-06-25   张三     ED3k000000   李四     新建*&amp;---------------------------------------------------------------------*REPORT ztest_004.*&amp;---------------------------------------------------------------------**&amp; INCLUDE*&amp;---------------------------------------------------------------------*INCLUDE ztest_004_top    .  &quot;Type/DataINCLUDE ztest_004_sel    .  &quot;Selection screenINCLUDE ztest_004_lcl    .  &quot;ClassINCLUDE ztest_004_frm    .  &quot;FormINCLUDE ztest_004_pbo    .  &quot;Screen PBOINCLUDE ztest_004_pai    .  &quot;Screen PAI*&amp;---------------------------------------------------------------------**&amp; 初始化处理*&amp;---------------------------------------------------------------------*INITIALIZATION.*&amp;---------------------------------------------------------------------**&amp; 选择屏幕控制*&amp;---------------------------------------------------------------------*AT SELECTION-SCREEN OUTPUT.*&amp;---------------------------------------------------------------------**&amp; 参数输入检查*&amp;---------------------------------------------------------------------*AT SELECTION-SCREEN.*&amp;---------------------------------------------------------------------**&amp; 程序开始处理*&amp;---------------------------------------------------------------------*START-OF-SELECTION.*&amp;---------------------------------------------------------------------**&amp; 程序结束处理*&amp;---------------------------------------------------------------------*END-OF-SELECTION.</code></pre><h1 id="简单模板"><a href="#简单模板" class="headerlink" title="简单模板"></a>简单模板</h1><pre><code class="highlight abap">*&amp;---------------------------------------------------------------------**&amp; 程序名：ZTEST_005*&amp;---------------------------------------------------------------------**&amp; 抬头：*&amp; 程序类型： 报表/表单/批导/后台JOB/函数/增强*&amp; 描述： *&amp; 修改记录：*&amp; 日期         修改人   请求号       业务顾问  修改内容*&amp; 2024-06-25   张三     ED3k000000   李四     新建*&amp;---------------------------------------------------------------------*REPORT ZTEST_005.***********************************************************************数据类型定义**********************************************************************include ZTEST_005_top.***********************************************************************屏幕处理**********************************************************************include ZTEST_005_sel.***********************************************************************主程序入口**********************************************************************include ZTEST_005_main.***********************************************************************包含**********************************************************************include ZTEST_005_frm.</code></pre>]]></content>
      
      
      <categories>
          
          <category> SAP </category>
          
          <category> ABAP </category>
          
          <category> 模板 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ABAP </tag>
            
            <tag> SAP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SAP权限对象的使用</title>
      <link href="/2024/02/16/004-%E6%9D%83%E9%99%90%E5%AF%B9%E8%B1%A1%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
      <url>/2024/02/16/004-%E6%9D%83%E9%99%90%E5%AF%B9%E8%B1%A1%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<p>通过事务码<code>su21</code>维护权限对象。</p><h1 id="创建权限对象"><a href="#创建权限对象" class="headerlink" title="创建权限对象"></a>创建权限对象</h1><p>填入对象、文本、类，再维护权限字段点击保存即完成了权限对象的创建。</p><p><img src="https://claudechan-1316756394.cos.ap-nanjing.myqcloud.com/PicGo/202402161312641.png?imageSlim" alt="image-20240216131201563"></p><h2 id="权限字段"><a href="#权限字段" class="headerlink" title="权限字段"></a>权限字段</h2><p>权限对象为权限字段的集合，我们通过权限对象中的权限字段来校验使用者所属的角色是否可以通过该字段的校验，可以同时校验一个或多个字段。</p><p>通过事务码<code>su20</code>来维护权限字段。</p><p><img src="https://claudechan-1316756394.cos.ap-nanjing.myqcloud.com/PicGo/202402161318154.png?imageSlim" alt="image-20240216131813115"></p><h1 id="在代码中使用权限对象"><a href="#在代码中使用权限对象" class="headerlink" title="在代码中使用权限对象"></a>在代码中使用权限对象</h1><pre><code class="highlight ABAP">AUTHORITY-CHECK OBJECT &#x27;ZWERKS&#x27; ID &#x27;WERKS&#x27; FIELD &#x27;2001&#x27;.IF sy-subrc &lt;&gt; 0. MESSAGE &#x27;No Authorization!&#x27; TYPE &#x27;E&#x27;.ENDIF.</code></pre>]]></content>
      
      
      <categories>
          
          <category> SAP </category>
          
          <category> ABAP </category>
          
          <category> 权限 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ABAP </tag>
            
            <tag> SAP </tag>
            
            <tag> 权限 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>跳过事务码权限检查</title>
      <link href="/2024/01/27/003-%E8%B7%B3%E8%BF%87%E4%BA%8B%E5%8A%A1%E7%A0%81%E6%9D%83%E9%99%90%E6%A3%80%E6%9F%A5/"/>
      <url>/2024/01/27/003-%E8%B7%B3%E8%BF%87%E4%BA%8B%E5%8A%A1%E7%A0%81%E6%9D%83%E9%99%90%E6%A3%80%E6%9F%A5/</url>
      
        <content type="html"><![CDATA[<p>当使用某个事务码而无法通过权限检验时，我们可以通过调试事务码权限校验函数<code>auth_check_tcode</code>来跳过权限校验：</p><p><img src="https://claudechan-1316756394.cos.ap-nanjing.myqcloud.com/PicGo/202401271409351.png?imageSlim" alt="image-20240127140927287"></p>]]></content>
      
      
      <categories>
          
          <category> SAP </category>
          
          <category> ABAP </category>
          
          <category> 权限 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ABAP </tag>
            
            <tag> SAP </tag>
            
            <tag> 权限 </tag>
            
            <tag> 调试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>内表分组</title>
      <link href="/2024/01/27/002-%E5%86%85%E8%A1%A8%E5%88%86%E7%BB%84/"/>
      <url>/2024/01/27/002-%E5%86%85%E8%A1%A8%E5%88%86%E7%BB%84/</url>
      
        <content type="html"><![CDATA[<p>在低版本的740语法中，对内表分组可以通过在循环中使用<code>AT NEW</code>的方式来实现。</p><p>新版本的740语法中提供了分组循环的功能：</p><pre><code class="highlight ABAP">SELECT *  INTO TABLE @DATA(lt_sflight)  FROM sflight  UP TO 100 ROWS.  &quot;分组循环  LOOP AT lt_sflight INTO DATA(lw_sflight)    GROUP BY ( carrid = lw_sflight-carrid size = GROUP SIZE )    REFERENCE INTO DATA(lt_sflight_group).&quot;每一组的对象    IF lt_sflight_group-&gt;*-size &gt; 1.&quot;当前组有重复的carrid      &quot;业务逻辑      LOOP AT GROUP lt_sflight_group INTO DATA(lw_sflight_group).        WRITE / lw_sflight_group-carrid.        EXIT.      ENDLOOP.    ENDIF.  ENDLOOP.</code></pre><p>程序输出：</p><p><img src="https://claudechan-1316756394.cos.ap-nanjing.myqcloud.com/PicGo/202401271331564.png?imageSlim" alt="image-20240127133134500"></p><p>底表数据：</p><p><img src="https://claudechan-1316756394.cos.ap-nanjing.myqcloud.com/PicGo/202401271332832.png?imageSlim" alt="image-20240127133226703"></p>]]></content>
      
      
      <categories>
          
          <category> SAP </category>
          
          <category> ABAP </category>
          
          <category> 语法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 代码 </tag>
            
            <tag> ABAP </tag>
            
            <tag> SAP </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
